// Generated by CoffeeScript 1.6.3
(function() {
  var allowCORS, app, db, express, flash, mongoose, passport, port;

  express = require('express');

  app = express();

  passport = require('passport');

  flash = require('connect-flash');

  mongoose = require('mongoose');

  mongoose.connect(process.env.MONG);

  port = process.env.PORT || 8080;

  allowCORS = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');
    if ('OPTIONS' === req.method) {
      return res.send(200);
    } else {
      return next();
    }
  };

  app.configure(function() {
    app.use(express["static"](__dirname + '/public'));
    app.use(express.logger('dev'));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(allowCORS);
    app.use(express.cookieParser());
    app.set('view engine', 'ejs');
    app.use(express.session({
      secret: 'notsecret'
    }));
    app.use(passport.initialize());
    app.use(passport.session());
    return app.use(flash());
  });

  db = mongoose.connection;

  db.on('error', console.error.bind(console, 'connection error:'));

  db.once('open', function() {
    var Todo;
    Todo = mongoose.model('Todo', {
      text: String
    });
    app.get('/api/todos', function(req, res) {
      return Todo.find(function(err, todos) {
        if (err) {
          res.send(err);
          console.log(res);
        }
        return res.json(todos);
      });
    });
    app.post('/api/todos', function(req, res) {
      return Todo.create({
        text: req.body.text,
        done: false
      }, function(err, todo) {
        if (err) {
          res.send(err);
          console.log(res);
        }
        return Todo.find(function(err, todos) {
          if (err) {
            res.send(err);
            console.log(res);
          }
          return res.json(todos);
        });
      });
    });
    app["delete"]('/api/todos/:todo_id', function(req, res) {
      return Todo.remove({
        _id: req.params.todo_id
      }, function(err, todo) {
        if (err) {
          res.send(err);
          console.log(res);
        }
        return Todo.find(function(err, todos) {
          if (err) {
            res.send(err);
            console.log(res);
          }
          return res.json(todos);
        });
      });
    });
    app.get('*', function(req, res) {
      return res.sendfile('./public/index.html');
    });
    app.listen(port);
    return console.log('running on ' + port);
  });

}).call(this);
